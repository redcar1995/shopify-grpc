<Project Sdk="Microsoft.NET.Sdk" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="..\Grpc.Core\Version.csproj.include" />

  <PropertyGroup>
    <AssemblyName>Protobuf.MSBuild</AssemblyName>
    <Version>$(GrpcCsharpVersion)</Version>
    <!-- If changing targets, change also paths in Google.Protobuf.Tools.targets. -->
    <TargetFrameworks>netstandard1.3;net40</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup Label="Asset root folders. TODO(kkm): Change with package separation.">
    <!-- TODO(kkm): Rework whole section when splitting packages.  -->
    <!-- GRPC: ../../third_party/protobuf/src/google/protobuf/  -->
    <!-- GPB:  ../src/google/protobuf/ -->
    <Assets_ProtoInclude>../../../third_party/protobuf/src/google/protobuf/</Assets_ProtoInclude>

    <!-- GPB:  protoc\ -->
    <!-- GRPC: protoc_plugins\protoc_ -->
    <Assets_ProtoCompiler>../protoc_plugins/protoc_</Assets_ProtoCompiler>

    <!-- GRPC: protoc_plugins\ -->
    <Assets_GrpcPlugins>../protoc_plugins/</Assets_GrpcPlugins>
  </PropertyGroup>

  <PropertyGroup>
    <_NetStandard>False</_NetStandard>
    <_NetStandard Condition=" $(TargetFramework.StartsWith('netstandard')) or $(TargetFramework.StartsWith('netcore')) ">True</_NetStandard>

    <!-- So we do not hardcode an exact version into #if's. -->
    <DefineConstants Condition="$(_NetStandard)">$(DefineConstants);NETSTANDARD</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Label="NuGet package definition" Condition=" '$(Configuration)' == 'Release' ">
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageOutputPath>../../../artifacts</PackageOutputPath>

    <!-- TODO(kkm): Change to "build\" after splitting. -->
    <BuildOutputTargetFolder>build\_protobuf\</BuildOutputTargetFolder>
    <DevelopmentDependency>true</DevelopmentDependency>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <PackageId>Grpc.Tools</PackageId>
    <Description>gRPC and Protocol Buffer compiler for managed C# and native C++ projects.

Add this package to a project that contains .proto files to be compiled to code.
It contains the compilers, include files and project system integration for gRPC
and Protocol buffer service description files necessary to build them on Windows,
Linux and MacOS. Managed runtime is supplied separately in the Grpc.Core package.</Description>
    <Copyright>Copyright 2018 gRPC authors</Copyright>
    <Authors>gRPC authors</Authors>
    <PackageLicenseUrl>https://github.com/grpc/grpc/blob/master/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/grpc/grpc</PackageProjectUrl>
    <PackageTags>gRPC RPC protocol HTTP/2</PackageTags>
  </PropertyGroup>

  <ItemGroup Label="NuGet package assets">
    <None Pack="true" PackagePath="build\" Include="build\**\*.xml; build\**\*.props; build\**\*.targets;" />

    <!-- Protobuf assets (for Google.Protobuf.Tools) -->
    <_ProtoTemp Include="any.proto;api.proto;descriptor.proto;duration.proto;" />
    <_ProtoTemp Include="empty.proto;field_mask.proto;source_context.proto;" />
    <_ProtoTemp Include="struct.proto;timestamp.proto;type.proto;wrappers.proto" />
    <_Asset PackagePath="build/native/include/google/protobuf/" Include="@(_ProtoTemp->'$(Assets_ProtoInclude)%(Identity)')" />

    <!-- TODO(kkm): GPB builds assets into "macosx", GRPC into "macos". -->
    <_Asset PackagePath="build/native/bin/windows/protoc.exe" Include="$(Assets_ProtoCompiler)windows_x86/protoc.exe" />
    <_Asset PackagePath="build/native/bin/linux_x86/protoc" Include="$(Assets_ProtoCompiler)linux_x86/protoc" />
    <_Asset PackagePath="build/native/bin/linux_x64/protoc" Include="$(Assets_ProtoCompiler)linux_x64/protoc" />
    <_Asset PackagePath="build/native/bin/macosx_x86/protoc" Include="$(Assets_ProtoCompiler)macos_x86/protoc" /> <!-- GPB: macosx-->
    <_Asset PackagePath="build/native/bin/macosx_x64/protoc" Include="$(Assets_ProtoCompiler)macos_x64/protoc" /> <!-- GPB: macosx-->

    <!-- gRPC assets (for Grpc.Tools) -->
    <_Asset PackagePath="build/native/bin/windows/grpc_csharp_plugin.exe" Include="$(Assets_GrpcPlugins)protoc_windows_x86/grpc_csharp_plugin.exe" />
    <_Asset PackagePath="build/native/bin/linux_x86/grpc_csharp_plugin" Include="$(Assets_GrpcPlugins)protoc_linux_x86/grpc_csharp_plugin" />
    <_Asset PackagePath="build/native/bin/linux_x64/grpc_csharp_plugin" Include="$(Assets_GrpcPlugins)protoc_linux_x64/grpc_csharp_plugin" />
    <_Asset PackagePath="build/native/bin/macosx_x86/grpc_csharp_plugin" Include="$(Assets_GrpcPlugins)protoc_macos_x86/grpc_csharp_plugin" />
    <_Asset PackagePath="build/native/bin/macosx_x64/grpc_csharp_plugin" Include="$(Assets_GrpcPlugins)protoc_macos_x64/grpc_csharp_plugin" />

    <None Include="@(_Asset)" Pack="true" Visible="false" />
  </ItemGroup>

  <ItemGroup Condition="!$(_NetStandard)">
    <Reference Include="Microsoft.Build.Framework" Pack="false" />
    <Reference Include="Microsoft.Build.Utilities.v4.0" Pack="false" />
  </ItemGroup>

  <ItemGroup Condition="$(_NetStandard)">
    <PackageReference Include="Microsoft.Build.Framework" Version="15.5.180" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="15.5.180" />
    <!--  Set PrivateAssets="All" on all items, so that even implicit package
          dependencies do not become dependencies of this package. -->
    <PackageReference Update="@(PackageReference)" PrivateAssets="All" />
  </ItemGroup>

</Project>
