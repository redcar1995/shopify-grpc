<Project Sdk="Microsoft.NET.Sdk" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="..\Grpc.Core\Version.csproj.include" />

  <PropertyGroup>
    <TargetFrameworks>net45;netcoreapp1.0</TargetFrameworks>
    <OutputType>Exe</OutputType>
  </PropertyGroup>

  <Import Project="..\Grpc.Core\SourceLink.csproj.include" />

  <!-- This is copied verbatim from Grpc.Core/Common.csproj.include. Other settings
       in that file conflict with the intent of this build, as it cannot be signed,
       and may not compile Grpc.Core/Version.cs, as that file references constants
       in Grpc.Core.dll.
       TODO(kkm): Refactor imports. -->
  <PropertyGroup Condition="'$(OS)' != 'Windows_NT'">
    <!-- Workaround for https://github.com/dotnet/sdk/issues/335 -->
    <FrameworkPathOverride Condition="Exists('/usr/lib/mono/4.5-api')">/usr/lib/mono/4.5-api</FrameworkPathOverride>
    <FrameworkPathOverride Condition="Exists('/usr/local/lib/mono/4.5-api')">/usr/local/lib/mono/4.5-api</FrameworkPathOverride>
    <FrameworkPathOverride Condition="Exists('/Library/Frameworks/Mono.framework/Versions/Current/lib/mono/4.5-api')">/Library/Frameworks/Mono.framework/Versions/Current/lib/mono/4.5-api</FrameworkPathOverride>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\Grpc.Tools\Grpc.Tools.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Moq" Version="4.8.3" />
    <PackageReference Include="NUnit" Version="3.10.1" />
    <PackageReference Include="NUnitLite" Version="3.10.1" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'netcoreapp1.0' ">
    <PackageReference Include="Microsoft.Build.Framework; Microsoft.Build.Utilities.Core" Version="15.6.85" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net45' ">
    <Reference Include="Microsoft.Build.Framework; Microsoft.Build.Utilities.v4.0" />
  </ItemGroup>

</Project>
